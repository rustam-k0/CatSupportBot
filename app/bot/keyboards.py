# app/bot/keyboards.py
from telegram import InlineKeyboardButton, InlineKeyboardMarkup

def get_transaction_type_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏ (–ü—Ä–∏—Ö–æ–¥/–†–∞—Å—Ö–æ–¥)."""
    keyboard = [
        [
            InlineKeyboardButton("‚úÖ –ü—Ä–∏—Ö–æ–¥ (–¥–æ–Ω–∞—Ç)", callback_data="income"),
            InlineKeyboardButton("‚ùå –†–∞—Å—Ö–æ–¥ (–ø–æ–∫—É–ø–∫–∞)", callback_data="expense"),
        ]
    ]
    return InlineKeyboardMarkup(keyboard)

def get_confirmation_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö."""
    keyboard = [
        [InlineKeyboardButton("üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å", callback_data="save")],
        [InlineKeyboardButton("‚úèÔ∏è –ò—Å–ø—Ä–∞–≤–∏—Ç—å", callback_data="edit")],
        [InlineKeyboardButton("üìù –î–æ–±–∞–≤–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π", callback_data="add_comment")],
        [InlineKeyboardButton("‚úñÔ∏è –û—Ç–º–µ–Ω–∞", callback_data="cancel")],
    ]
    return InlineKeyboardMarkup(keyboard)

def get_editing_keyboard(transaction_data: dict):
    """–î–∏–Ω–∞–º–∏—á–µ—Å–∫–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø–æ–ª—è –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è."""
    keyboard = []
    editable_fields = {'pet_name': '–ü–∏—Ç–æ–º–µ—Ü', 'date': '–î–∞—Ç–∞', 'amount': '–°—É–º–º–∞', 'author': '–ê–≤—Ç–æ—Ä'}
    
    # –î–û–ë–ê–í–õ–Ø–ï–ú –ö–û–ù–¢–ï–ö–°–¢–ù–û-–ó–ê–í–ò–°–ò–ú–´–ï –ü–û–õ–Ø
    if transaction_data.get('type') == 'income':
        editable_fields['bank'] = '–ë–∞–Ω–∫'
    else: # expense
        editable_fields['procedure'] = '–ü—Ä–æ—Ü–µ–¥—É—Ä–∞'
    
    for field, label in editable_fields.items():
        value = transaction_data.get(field, '–Ω–µ –∑–∞–¥–∞–Ω–æ')
        keyboard.append([InlineKeyboardButton(f"{label}: {value}", callback_data=f"edit_{field}")])
    
    keyboard.append([InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—é", callback_data="edit_back")])
    return InlineKeyboardMarkup(keyboard)