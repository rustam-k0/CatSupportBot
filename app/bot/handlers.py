# app/bot/handlers.py

from telegram import Update
from telegram.ext import ContextTypes, CommandHandler, MessageHandler, filters
from app.services.vision_ocr import recognize_text

# ... (—Ñ—É–Ω–∫—Ü–∏–∏ start –∏ help_command –æ—Å—Ç–∞—é—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π) ...
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    user_name = update.effective_user.first_name
    await update.message.reply_text(
        f"–ü—Ä–∏–≤–µ—Ç, {user_name}! üêæ\n\n"
        "–Ø –±–æ—Ç –¥–ª—è —É—á–µ—Ç–∞ —Ñ–∏–Ω–∞–Ω—Å–æ–≤ –≤–∞—à–∏—Ö –ø–æ–¥–æ–ø–µ—á–Ω—ã—Ö –∫–æ—Ç–∏–∫–æ–≤.\n"
        "–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —Ñ–æ—Ç–æ —á–µ–∫–∞ –∏–ª–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç –¥–æ–Ω–∞—Ç–∞."
    )


async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    await update.message.reply_text(
        "–Ø —É–º–µ—é:\n"
        "1. –ü—Ä–∏–Ω–∏–º–∞—Ç—å —Ñ–æ—Ç–æ —á–µ–∫–æ–≤.\n"
        "2. –†–∞—Å–ø–æ–∑–Ω–∞–≤–∞—Ç—å –Ω–∞ –Ω–∏—Ö —Ç–µ–∫—Å—Ç.\n"
        "3. –°–æ—Ö—Ä–∞–Ω—è—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ Google-—Ç–∞–±–ª–∏—Ü—É.\n\n"
        "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å."
    )

# --- –ò–ó–ú–ï–ù–ï–ù–ù–´–ô –û–ë–†–ê–ë–û–¢–ß–ò–ö ---
async def handle_photo(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ñ–æ—Ç–æ, —Ä–∞—Å–ø–æ–∑–Ω–∞–µ—Ç —Ç–µ–∫—Å—Ç –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏–ª–∏ –î–ï–¢–ê–õ–¨–ù–£–Æ –û–®–ò–ë–ö–£."""
    
    await update.message.reply_text("–§–æ—Ç–æ –ø–æ–ª—É—á–∏–ª, –Ω–∞—á–∏–Ω–∞—é —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ... üßê")

    photo_file = await update.message.photo[-1].get_file()
    photo_bytes = await photo_file.download_as_bytearray()

    recognized_data = await recognize_text(bytes(photo_bytes))

    if recognized_data and '–û–®–ò–ë–ö–ê' not in recognized_data and '–û–¢–ö–ê–ó–ê–ù–û –í –î–û–°–¢–£–ü–ï' not in recognized_data:
        # –£—Å–ø–µ—à–Ω—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π
        await update.message.reply_text(
            "–í–æ—Ç —á—Ç–æ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å:\n\n"
            f"```\n{recognized_data}\n```",
            parse_mode='MarkdownV2'
        )
    elif recognized_data:
        # –°—Ü–µ–Ω–∞—Ä–∏–π, –∫–æ–≥–¥–∞ —Å–µ—Ä–≤–∏—Å –≤–µ—Ä–Ω—É–ª —Ç–µ–∫—Å—Ç –æ—à–∏–±–∫–∏
        await update.message.reply_text(
            f"‚ùóÔ∏è **–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:**\n\n`{recognized_data}`",
            parse_mode='HTML'
        )
    else:
        # –°—Ü–µ–Ω–∞—Ä–∏–π, –∫–æ–≥–¥–∞ —Ç–µ–∫—Å—Ç –Ω–∞ —Ñ–æ—Ç–æ –ø—Ä–æ—Å—Ç–æ –Ω–µ –Ω–∞–π–¥–µ–Ω
        await update.message.reply_text(
            "–¢–µ–∫—Å—Ç –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–µ —Ñ–æ—Ç–æ."
        )

# –°–æ–∑–¥–∞–µ–º —Ö–µ–Ω–¥–ª–µ—Ä—ã
start_handler = CommandHandler("start", start)
help_handler = CommandHandler("help", help_command)
photo_handler = MessageHandler(filters.PHOTO, handle_photo)